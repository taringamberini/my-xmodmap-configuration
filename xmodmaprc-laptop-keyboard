! Thanks to Xah Lee http://xahlee.info/kbd/linux_swap_modifier_keys.html

! In order to discover the keysym of interesting keys, at command line run:
!
!     $ sudo apt-get install x11proto-core-dev
!     $ egrep '#define.*XK_' /usr/include/X11/keysymdef.h | egrep -i "alt|control|escape|caps"
!
!     #define XK_Escape                        0xff1b
!     #define XK_Control_L                     0xffe3  /* Left control */
!     #define XK_Control_R                     0xffe4  /* Right control */
!     #define XK_Caps_Lock                     0xffe5  /* Caps lock */
!     #define XK_Alt_L                         0xffe9  /* Left alt */
!     #define XK_Alt_R                         0xffea  /* Right alt */
!     #define XK_3270_AltCursor                0xfd10
!     #define XK_signaturemark                 0x0aca  /*(U+2613 SALTIRE)*/
!     #define XK_maltesecross                  0x0af0  /* U+2720 MALTESE CROSS */
!
! keysym is the string after XK_.
!
! In order to discover the current modifier map run:
! 
!     $ xmodmap -pm
!     xmodmap:  up to 4 keys per modifier, (keycodes in parentheses):
!     
!     shift       Shift_L (0x32),  Shift_R (0x3e)
!     lock        Caps_Lock (0x42)
!     control     Control_L (0x25),  Control_R (0x69)
!     mod1        Alt_L (0x40),  Meta_L (0xcd)
!     mod2        Num_Lock (0x4d)
!     mod3      
!     mod4        Super_L (0x85),  Super_R (0x86),  Super_L (0xce),  Hyper_L (0xcf)
!     mod5        ISO_Level3_Shift (0x5c),  Mode_switch (0xcb)
!
! where ISO_Level3_Shift refers on my keyboard to the AltGr key.

! Swap Control_R and AltGr
remove control = Control_R
remove mod5 = ISO_Level3_Shift
keysym Control_R = ISO_Level3_Shift
keysym ISO_Level3_Shift = Control_R
add control = Control_R
add mod5 = ISO_Level3_Shift

! Swap Control_L and Alt_L
remove control = Control_L
remove mod1 = Alt_L Meta_L
keysym Control_L = Alt_L
keysym Alt_L = Control_L
add control = Control_L
add mod1 = Alt_L Meta_L

! Swap Escape and Caps_Lock 
remove lock = Caps_Lock 
keysym Caps_Lock = Escape
keysym Escape = Caps_Lock
add lock = Caps_Lock 

! Swap 7 and /
!
! The following command shows which keycode is mapped to keysymbols 7 and /
! in the key map table:
!
!     $ xmodmap -pk | egrep "\(7\)|\(slash\)" --color
!         16        0x0037 (7)  0x002f (slash)  0x0037 (7)  0x0026 (ampersand)  0x007b (braceleft)  0x0ac6 (seveneighths)   0x0037 (7)  0x002f (slash)  0x007b (braceleft)  0x0ac6 (seveneighths)
!
! In the key map table, after the first column, which show the keycode of the
! key, there are pairs (keysym value, keysym name) of columns. Each pairs
! refers to a keysym which is shown depending on which key, or keys combination,
! is pressed. On my laptop's keyboard I have discovered ('man xmodmap' isn't
! very accurate on this) that:
! 0x0037 (7)            is shown pressing 7
! 0x002f (slash)        is shown pressing Shift_L + 7 or Shift_R + 7
! 0x0037 (7)
! 0x0026 (ampersand)    is shown pressing AltGr + Shift_R + CTRL_R + 7
! 0x007b (braceleft)    is shown pressing AltGr + 7
! 0x0ac6 (seveneighths) is shown pressing AltGr + Shift_R + 7
! 0x0037 (7)
! 0x002f (slash)
! 0x007b (braceleft)
! 0x0ac6 (seveneighths)
!
! Therefore, in order to swap 7 and /, I can assign to keycode 16 a new
! key map table record, in which only the first two keysyms are swapped:
keycode 16 = slash 7 7 ampersand braceleft seveneighths 7 slash braceleft seveneighths
